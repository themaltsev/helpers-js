//Шаблон THREE js на классах

import * as THREE from 'three';

import { OrbitControls } from "three/examples/jsm/controls/OrbitControls"


export default class tpl3d {
    constructor(){

        this.camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.1, 1000 );
        this.camera.position.z = 600;

        this.scene = new THREE.Scene();

        this.renderer = new THREE.WebGLRenderer( { antialias: true } );
        this.renderer.setSize( window.innerWidth, window.innerHeight );
        document.querySelector('.app').appendChild( this.renderer.domElement );

        this.scene = new THREE.Scene();

        this.addMesh()

        this.time = 0

        this.render()

                this.controls = new OrbitControls (this.camera, this.renderer.domElement);

    }

    addMesh(){

        // this.geometry = new THREE.PlaneBufferGeometry( 1,1 );
        // this.material = new THREE.MeshNormalMaterial();
        
        // this.mesh = new THREE.Mesh( this.geometry, this.material );
        // this.scene.add( this.mesh );


        this.cube__geometry = new THREE.CubeGeometry(100,100,100)
        // this.material = new THREE.MeshBasicMaterial({color: 0x333333});
        this.material = new THREE.MeshNormalMaterial({color: 0x333333});
        this.mesh = new THREE.Mesh( this.cube__geometry, this.material );

        this.scene.add( this.mesh );
      
    }

    render(){
        this.time++
        this.mesh.rotation.x += 0.01;
        this.mesh.rotation.y += 0.02;
        this.renderer.render( this.scene, this.camera );
        window.requestAnimationFrame(this.render.bind(this))

    }


}

new tpl3d()

